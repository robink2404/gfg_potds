// Bottom View of Binary Tree

//Function to return a list containing the bottom view of the given tree.

class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
                int x=0;
        map<int,int> mp;
        
        vector<int> ans;
        queue<pair<Node*,int>> q;
        
        q.push({root,0});
        
        while(!q.empty())
        {
            Node* p=q.front().first;
            int r=q.front().second;
            q.pop();
            
            mp[r]=p->data;
            if(p->left)
            {
                q.push({p->left,r-1});
            }
            if(p->right)
            q.push({p->right,r+1});
        }
        
        for(auto itr:mp)
        ans.push_back(itr.second);
        return ans;
        
    }
};
